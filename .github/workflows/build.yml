name: Build

on:
  push:
    branches:
      - '*'
      - '!badges'
    paths-ignore:
      - 'README.md'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Build
        run: make build
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16
    - name: Run Test
      run: make test
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Coverage Check
      id: coverage
      run: |
        make coverage
        COVERAGE="$(go tool cover -func=c.out | grep total | grep -Eo '[0-9]+\.[0-9]+')%"
        # Generates a GitHub Workflow output named `lines` with a coverage value
        echo "##[set-output name=lines;]${COVERAGE}"
        # Output values to be used by other steps
        echo "##[set-output name=path;]${BADGE_PATH}"
        echo "##[set-output name=branch;]${BRANCH}"
      env:
        BADGE_PATH: ${{ steps.extract_branch.outputs.branch }}/coverage.svg
        BRANCH: badges
    - name: Generate Report
      run: make report
    - name: Copy Files
      run: |
        mkdir reports
        cp coverage.html reports/.
    - name: Archive Report
      uses: actions/upload-artifact@v2
      with:
        name: reports
        path: reports
    - uses: actions/checkout@v1
      with:
        ref: ${{ steps.coverage.outputs.branch }}
    - name: Create destination directory
      env:
        BADGE_PATH: ${{ steps.coverage.outputs.path }}
      run: mkdir -p "${BADGE_PATH%/*}"
    - name: Generate the badge SVG image
      uses: emibcn/badge-action@v1
      id: badge
      with:
        label: 'Test coverage'
        status: ${{ steps.coverage.outputs.lines }}
        color: 'blue,555,daf'
        path: ${{ steps.coverage.outputs.path }}
    - name: Upload badge as artifact
      uses: actions/upload-artifact@v2
      with:
        name: badge
        path: ${{ steps.coverage.outputs.path }}
        if-no-files-found: error
    - name: Commit badge
      continue-on-error: true
      env:
        BADGE: ${{ steps.coverage.outputs.path }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add "${BADGE}"
        git commit -m "Add/Update badge"
    - name: Push badge commit
      uses: ad-m/github-push-action@master
      if: ${{ success() }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ steps.coverage.outputs.branch }}
